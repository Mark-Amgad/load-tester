# .github/workflows/resolve-rchash-conflicts.yml
name: Resolve RCHASH Conflicts After Merge

on:
  push:
    branches:
      - main
    paths:
      - 'helm-chart/Chart.yml'

permissions:
  contents: write
  pull-requests: write

jobs:
  resolve-conflicts:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Resolve RCHASH conflicts in open PRs
      uses: actions/github-script@v7
      with:
        script: |
          // Get all open PRs targeting main
          const { data: prs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            base: 'main'
          });
          
          console.log(`Found ${prs.length} open PRs to check for conflicts`);
          
          for (const pr of prs) {
            try {
              console.log(`\n--- Processing PR #${pr.number}: ${pr.title} ---`);
              
              // Get the current Chart.yml from the PR branch
              let prChartFile;
              try {
                const { data } = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: 'helm-chart/Chart.yml',
                  ref: pr.head.ref
                });
                prChartFile = data;
              } catch (error) {
                console.log(`PR #${pr.number}: No Chart.yml found, skipping`);
                continue;
              }
              
              // Get the current Chart.yml from main branch
              const { data: mainChartFile } = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'helm-chart/Chart.yml',
                ref: 'main'
              });
              
              // Decode content
              const prContent = Buffer.from(prChartFile.content, 'base64').toString();
              const mainContent = Buffer.from(mainChartFile.content, 'base64').toString();
              
              // Extract RCHASH values
              const prHashMatch = prContent.match(/RCHASH: (.+)/);
              const mainHashMatch = mainContent.match(/RCHASH: (.+)/);
              
              const prHash = prHashMatch ? prHashMatch[1].trim() : null;
              const mainHash = mainHashMatch ? mainHashMatch[1].trim() : null;
              
              console.log(`PR #${pr.number} RCHASH: ${prHash}`);
              console.log(`Main RCHASH: ${mainHash}`);
              
              if (!prHash || !mainHash) {
                console.log(`PR #${pr.number}: Missing RCHASH, skipping`);
                continue;
              }
              
              if (prHash === mainHash) {
                console.log(`PR #${pr.number}: No RCHASH conflict, skipping`);
                continue;
              }
              
              // Merge main content but keep PR's RCHASH
              console.log(`PR #${pr.number}: Resolving RCHASH conflict...`);
              
              // Replace main's RCHASH with PR's RCHASH
              const resolvedContent = mainContent.replace(/RCHASH: .+/, `RCHASH: ${prHash}`);
              
              // Update the PR branch with resolved content
              await github.rest.repos.createOrUpdateFileContents({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'helm-chart/Chart.yml',
                message: `chore: resolve RCHASH conflict, keep PR value ${prHash}`,
                content: Buffer.from(resolvedContent).toString('base64'),
                sha: prChartFile.sha,
                branch: pr.head.ref
              });
              
              console.log(`PR #${pr.number}: Successfully resolved conflict`);
              
              // Comment on the PR
              await github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `üîß **RCHASH Conflict Auto-Resolved**\n\nA merge to main caused a conflict in \`helm-chart/Chart.yml\`. The conflict has been automatically resolved by:\n\n- ‚úÖ **Keeping your PR's RCHASH**: \`${prHash}\`\n- ‚úÖ **Updating other changes from main**\n\nYour PR is now up-to-date and ready for review! üöÄ`
              });
              
            } catch (error) {
              console.error(`Failed to resolve conflict in PR #${pr.number}:`, error.message);
              
              // Comment about the failure
              try {
                await github.rest.issues.createComment({
                  issue_number: pr.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `‚ö†Ô∏è **RCHASH Conflict Resolution Failed**\n\nThere was an issue automatically resolving the RCHASH conflict in this PR. You may need to manually resolve it.\n\nError: \`${error.message}\``
                });
              } catch (commentError) {
                console.error(`Also failed to comment on PR #${pr.number}:`, commentError.message);
              }
            }
          }
          
          console.log('\n--- Conflict resolution completed ---');