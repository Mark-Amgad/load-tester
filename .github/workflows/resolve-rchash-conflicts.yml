# .github/workflows/resolve-rchash-conflicts.yml
name: Resolve RCHASH Conflicts After Merge

on:
  push:
    branches:
      - main
    paths:
      - 'helm-chart/Chart.yml'

permissions:
  contents: write
  pull-requests: write

jobs:
  resolve-conflicts:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Resolve RCHASH conflicts in open PRs
      run: |
        # Get all open PRs using GitHub CLI
        gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
        
        # Get open PRs as JSON
        OPEN_PRS=$(gh pr list --state open --base main --json number,headRefName,title)
        
        echo "Open PRs: $OPEN_PRS"
        
        # Process each PR
        echo "$OPEN_PRS" | jq -c '.[]' | while read pr; do
          PR_NUMBER=$(echo "$pr" | jq -r '.number')
          PR_BRANCH=$(echo "$pr" | jq -r '.headRefName')
          PR_TITLE=$(echo "$pr" | jq -r '.title')
          
          echo ""
          echo "--- Processing PR #$PR_NUMBER: $PR_TITLE ---"
          echo "Branch: $PR_BRANCH"
          
          # Check if Chart.yml exists in PR branch
          if ! git show origin/$PR_BRANCH:helm-chart/Chart.yml > /dev/null 2>&1; then
            echo "PR #$PR_NUMBER: No Chart.yml found, skipping"
            continue
          fi
          
          # Get RCHASH from PR branch (before any conflicts)
          PR_RCHASH=$(git show origin/$PR_BRANCH:helm-chart/Chart.yml | grep "RCHASH:" | awk '{print $2}' | tr -d ' ')
          
          # Get RCHASH from main branch
          MAIN_RCHASH=$(git show main:helm-chart/Chart.yml | grep "RCHASH:" | awk '{print $2}' | tr -d ' ')
          
          echo "PR #$PR_NUMBER RCHASH: $PR_RCHASH"
          echo "Main RCHASH: $MAIN_RCHASH"
          
          if [ "$PR_RCHASH" = "$MAIN_RCHASH" ]; then
            echo "PR #$PR_NUMBER: No RCHASH conflict, skipping"
            continue
          fi
          
          # Checkout PR branch
          git checkout -B temp-$PR_BRANCH origin/$PR_BRANCH
          
          # Check if there are conflicts by trying to merge
          if git merge main --no-commit --no-ff > /dev/null 2>&1; then
            echo "PR #$PR_NUMBER: No conflicts, cleaning up merge"
            git merge --abort
            continue
          fi
          
          echo "PR #$PR_NUMBER: Conflicts detected, resolving..."
          
          # Merge main into PR branch (this will create conflicts)
          git merge main --no-commit --no-ff || true
          
          # Check if Chart.yml has conflicts
          if grep -q "<<<<<<< " helm-chart/Chart.yml 2>/dev/null; then
            echo "PR #$PR_NUMBER: Found conflict markers in Chart.yml, resolving..."
            
            # Get the clean version from main
            git show main:helm-chart/Chart.yml > helm-chart/Chart.yml.tmp
            
            # Replace main's RCHASH with PR's RCHASH
            sed -i "s/RCHASH: .*/RCHASH: $PR_RCHASH/" helm-chart/Chart.yml.tmp
            
            # Replace the conflicted file with resolved version
            mv helm-chart/Chart.yml.tmp helm-chart/Chart.yml
            
            # Mark as resolved
            git add helm-chart/Chart.yml
            
            echo "PR #$PR_NUMBER: Resolved RCHASH conflict, keeping: $PR_RCHASH"
          else
            echo "PR #$PR_NUMBER: No conflicts in Chart.yml"
          fi
          
          # Complete the merge
          git commit -m "chore: merge main and resolve RCHASH conflict, keep PR value $PR_RCHASH" || {
            echo "PR #$PR_NUMBER: Nothing to commit, conflicts may have been auto-resolved"
            git merge --abort
            continue
          }
          
          # Push to PR branch
          git push origin temp-$PR_BRANCH:$PR_BRANCH
          
          echo "PR #$PR_NUMBER: Successfully resolved and pushed"
          
          # Comment on PR
          gh pr comment $PR_NUMBER --body "ðŸ”§ **RCHASH Conflict Auto-Resolved**
        
        A merge to main caused a conflict in \`helm-chart/Chart.yml\`. The conflict has been automatically resolved by:
        
        - âœ… **Merging latest changes from main**
        - âœ… **Keeping your PR's RCHASH**: \`$PR_RCHASH\`
        
        Your PR is now up-to-date and ready for review! ðŸš€"
          
          # Clean up
          git checkout main
          git branch -D temp-$PR_BRANCH
          
        done
        
        echo ""
        echo "--- Conflict resolution completed ---"